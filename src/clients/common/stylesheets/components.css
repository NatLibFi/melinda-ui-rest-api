@import "/common/stylesheets/fonts.css";

/* ---------------------------------------------------------------------------- */
/* CSS for generic GUI components */
/* ---------------------------------------------------------------------------- */

/* Filler div to take remaining space */
.Filler {
  flex-grow: 1;
}

.FlexBox {
  display: flex;
}

.HBox {
  display: flex;
  flex-direction: row;
}

.VBox {
  display: flex;
  flex-direction: column;
}

/* ---------------------------------------------------------------------------- */
/* Viewport */
/* ---------------------------------------------------------------------------- */

.viewport-full {
  height: 100vh;
  width: 100vw;
}

/* ---------------------------------------------------------------------------- */
/* Tooltips */
/* ---------------------------------------------------------------------------- */

.tooltip {
  position: relative;
}

.tooltip:hover:after {
  content: attr(tooltip-text);
  position: absolute;
  left: 50%;
  /* right: 0; */
  top: 100%;
  transform: translateX(-50%);
  padding: 0.4em;
  border-radius: 0px 0px 4px 4px;
  /* basic styles */
  background: rgb(182, 225, 224);
  color: #000;
  font-size: 0.5em;
  font-family: "Roboto", "Roboto-mono", "Roboto-serif";
}

/* ---------------------------------------------------------------------------- */
/* Tools-related common rules */
/* ---------------------------------------------------------------------------- */

.tools {
  display: flex;
  flex-direction: row;
  justify-content: center;
  align-items: center;
  width: 100vw;
  margin-top: 0.25em;
  margin-bottom: 0.25em;
}

.tools .highlight-border {
  border: 2px solid rgb(182, 225, 224);
  border-radius: 1em;
  padding-left: 1.5em;
  padding-right: 1em;
  padding-top: 0.5em;
  padding-bottom: 0.5em;
  margin-left: 0.5em;
  margin-right: 0.5em;
}

.tools>.dropdown,
.tools>.dropdown>button {
  height: 40px;
  font-size: 32px;
}

.tools button {
  height: 38px;
  margin-left: 1px;
  margin-right: 1px;
}

.tools button:active {
  background-color: darkgrey !important;
}

/* ---------------------------------------------------------------------------- */
/* Buttons inside toolbars, some with icons */
/* ---------------------------------------------------------------------------- */

button {
  font-size: var(--font-size-label-normal);
  font-weight: var(--font-weight-label-normal);
  font-family: "Roboto-mono", "Roboto", "Roboto-serif";
  color: inherit;
  border: 1px solid grey;
  background-color: transparent;
  /*padding: 4px 16px;*/
  padding: 4px 14px;
  cursor: pointer;
  border-radius: 1em;
}

button.no-border {
  border: 0px;
}

button.no-border.negative {
  border-color: #F99;
  background-color: #F99;
  color: #000;
}

button.icon {
  font-size: var(--font-size-icon-normal);
  border-radius: 0.75rem;
  min-height: var(--font-line-height-content-normal);
  min-width: var(--font-line-height-content-normal);
  max-height: var(--font-line-height-content-normal);
  max-width: var(--font-line-height-content-normal);
  padding: 4px;
}

button.positive {
  border-color: #d9e7cb;
  background-color: #d9e7cb;
}

button.negative {
  border: 0px;
  color: #C63E1C;
}

.Button input {
  font-size: var(--font-size-label-normal);
  font-weight: var(--font-weight-label-normal);
  color: inherit;
  border: 1px solid grey;
  background-color: transparent;
  /*padding: 4px 16px;*/
  padding: 4px 14px;
  cursor: pointer;
  border-radius: 1em;
}

.button-down {
  background-color: lightblue;
}

.ToolBar button {
  font-size: var(--font-size-label-normal);
  font-weight: var(--font-weight-label-normal);
  color: inherit;
  border: 0;
  background-color: transparent;
  /*padding: 4px 16px;*/
  padding: 4px 14px;
  cursor: pointer;
}

.ToolBar button:disabled {
  color: gray;
  cursor: default;
}

.ToolBar button:enabled:hover {
  background-color: rgba(0, 0, 0, 0.10);
  transition: background-color .25s;
}

/* Links inside buttons are not decorated */
button>a,
button>a:visited {
  color: inherit;
  text-decoration: none;
}

/* ---------------------------------------------------------------------------- */
/* Inputs & their labels */
/* ---------------------------------------------------------------------------- */

.Input {
  display: flex;
  width: 100%;
}

.Input>label {
  color: rgb(48, 93, 109);
  font-family: "Roboto-mono", "Roboto", "Roboto-serif";
  font-size: var(--font-size-label-normal);
  font-weight: var(--font-weight-label-normal);
  margin-right: 8px;
}

.Input>input {
  font-family: var(--font-family-content);
  border: 0;
  border-bottom: 1pt solid grey;
  outline: none;
  font-size: var(--font-size-content-normal);
  font-weight: var(--font-weight-content-normal);
  flex-grow: 1;
}

.Input>datalist>option {
  font-family: var(--font-family-content);
  font-size: var(--font-size-label-normal);
  font-weight: var(--font-weight-label-normal);
}

.Input>input:valid {
  border-bottom: 1pt solid green;
}

.Input>input:invalid {
  border-bottom: 1pt solid red;
}

/* ---------------------------------------------------------------------------- */
/* Select & their labels */
/* ---------------------------------------------------------------------------- */

.Select>label {
  color: rgb(48, 93, 109);
  font-family: var(--font-family-label);
  font-size: var(--font-size-label-normal);
  font-weight: var(--font-weight-label-normal);
  margin-right: 8px;
}

.Select>select {
  font-family: var(--font-family-content);
  border: 0;
  border-bottom: 1pt solid grey;
  background: #fff;
  outline: none;
  font-size: var(--font-size-content-normal);
  font-weight: var(--font-weight-content-normal);
}

.Select>select:focus {
  background: #ddd;
}

.Select>select>option {
  font-family: var(--font-family-content);
  font-size: var(--font-size-label-normal);
  font-weight: var(--font-weight-label-normal);
}

/* ---------------------------------------------------------------------------- */
/* Dropdown menus */
/* ---------------------------------------------------------------------------- */

.dropdown {
  position: relative;
  display: inline-block;
}

.NavBar>.dropdown>button,
.IconBar>.dropdown>button {
  height: 64px;
}

.dropdown-content {
  display: none;
  position: absolute;
  right: 0;
  background-color: white;
  color: black;
  min-width: 160px;
  box-shadow: 0 2px 5px 0 rgb(0 0 0 / 16%), 0 2px 10px 0 rgb(0 0 0 / 12%);
}

/* Show the dropdown menu on hover */
.dropdown:hover .dropdown-content {
  display: block;
}

.dropdown-content .menu-header {
  padding: 8px 16px;
  white-space: nowrap;
  font-weight: bold;
  text-align: center;
}

.dropdown-content hr {
  border: 0px;
  border-top: 1px solid lightgray;
}

.dropdown-content .menu-item {
  padding: 8px 16px;
  white-space: nowrap;
  color: #305d6d;
}

.dropdown-content .menu-item:hover {
  background-color: lightgrey;
}

/* ---------------------------------------------------------------------------- */
/* Box
/* ---------------------------------------------------------------------------- */

.BoxShadow {
  box-shadow: 0 2px 5px 0 rgb(0 0 0 / 16%), 0 2px 10px 0 rgb(0 0 0 / 12%);
}

/* ---------------------------------------------------------------------------- */
/* Modal dialogs
/* ---------------------------------------------------------------------------- */

.modal {
  display: none;
  /* Hidden by default */
  position: fixed;
  /* Stay in place */
  z-index: 3;
  /* Sit on top */
  left: 0;
  top: 0;
  width: 100%;
  /* Full width */
  height: 100%;
  /* Full height */
  overflow: auto;
  /* Enable scroll if needed */
  background-color: rgb(0, 0, 0);
  background-color: rgba(0, 0, 0, 0.2);
}

/* Modal Content */
.modal-content {
  background-color: #fefefe;
  margin: auto;
  padding: 16px 8px;
  min-width: 33%;
  max-width: 50%;
  min-height: 25%;
  border: 2px solid grey;
  border-radius: 8px;
}

.modal-content hr {
  border: 0px;
  border-top: 1px solid lightgray;
  margin: 8px 0px;
}

.modal-content .close {
  color: #aaaaaa;
  float: right;
  font-size: 28px;
  font-weight: bold;
}

.modal-content .close:hover,
.modal-content .close:focus {
  color: #000;
  text-decoration: none;
  cursor: pointer;
}

/* ---------------------------------------------------------------------------- */
/* Dialog */
/* ---------------------------------------------------------------------------- */

/* Dialog elements have rounded corners and no borders */
dialog {
  border: none;
  border-radius: 1em;
}

/* Overriding the default "display: block" for dialogs */
dialog[open] {
  display: flex;
}

/* Dialog has backdrop that is displayed behind dialog modal */
/* Backdrop has transparency and darker color */
dialog::backdrop {
  background: rgba(50, 50, 50, 0.5);
}

/* The mouse cursor is set default (arrow) in dialog */
dialog:hover {
  cursor: default
}

/* Modal is the container for the dialog contents: */
/*   - icon */
/*   - headline */
/*   - supprting text */
/*   - action buttons */
dialog:modal {
  display: flex;
  flex-direction: column;
  color: black;
}

/* Dialog can have icon: informative picture on top */
/* Icon is centered */
.dialog-icon {
  display: flex !important;
  flex-direction: row;
  justify-content: center;
  padding: 20px;
  font-size: 32px !important;
}

/* Dialog has a headline: the purpose of dialog */
/* Headline is centered */
.dialog-headline {
  display: flex;
  flex-direction: row;
  justify-content: center;
  padding: 0.5em;
  font-size: var(--font-size-headline-small);
}

/* Dialog has supporting text: for example instructions */
/* Supporting text color is less prominent*/
.dialog-supporting-text {
  display: flex;
  flex-wrap: wrap;
  flex-direction: row;
  color: rgb(66, 66, 66);
  padding-left: 0.5em;
  padding-right: 0.5em;
  padding-top: 25px;
  padding-bottom: 25px;
  font-size: var(--font-size-content-normal);
}

/* If hr or p element is used in supporting text, */
/* sets the horizontal line on it's own row */
.dialog-supporting-text hr, p:not(.full-width p) {
  flex: 0 0 100%
}

/* Dialog has place for actions */
/* Actions are positioned on the right */
.dialog-actions {
  display: flex;
  flex-direction: row;
  justify-content: flex-end;
  padding: 0.5em;
}

/* Dialog actions are buttons */
/* Buttons have no border, and have accent color */
.dialog-actions button {
  margin-left: 3em;
  border: none;
  padding-top: 6px;
  padding-bottom: 6px;
  color: rgb(40, 165, 165);
  font-size: var(--font-size-label-large);
  font-weight: var(--font-weight-label-large);
}

/* Dialog buttons show accent background-color on hover */
.dialog-actions button:hover {
  color: black;
  background-color: rgb(182, 225, 224);
}

/* Special style for dialog cancel button on hover */
.dialog-actions button.dialog-cancel-button:hover {
  background-color: lightgrey;
}

/* Dialog buttons show accent background-color on hover */
.dialog-actions button:active {
  background-color: grey;
  color: white
}

/* Disabled dialog buttons have 'not allowed' cursor on hover */
.dialog-actions button:disabled {
  cursor: not-allowed;
}

/* ---------------------------------------------------------------------------- */
/* Segmented buttons */
/* ---------------------------------------------------------------------------- */
/* Segmented buttons can be single-select or multi-select buttons. */
/* Use segmented buttons for for example for filtering */

/* Segmented button container is the container for all the buttons that are displayed as one segmented button */
/* It is recommended not add more than 5 buttons inside the container */
.segmented-button-container {
  display: inline-flex;
  justify-content: center;
  align-items: center;
}

/* Segmented button class is used with element <button> */
/* First and last button are rendered with round button edges */
.segmented-button {}

.segmented-button:first-child {
  border-radius: 1em 0em 0em 1em;
  margin-right: 0px;
  border-right: none;
}

.segmented-button:nth-child(n):not(:first-child, :last-child) {
  border-radius: 0px 0px 0px 0px;
  margin-left: 0px;
  margin-right: 0px;
  border-right: none;
}

.segmented-button:last-child {
  border-radius: 0em 1em 1em 0em;
  margin-left: 0px;
}

/* ---------------------------------------------------------------------------- */
/* Select buttons */
/* ---------------------------------------------------------------------------- */
/* Select buttons have two "states", selected or unselected */
/* There is a style for a button that is selected and another for when it's not selected */

/* Select button is wrapped with a container div */
.select-button-container {
  display: inline-flex;
  align-items: center;
  justify-content: center;
}

/* Helper class for html readibility, used for marking a button as select button */
/* Select button in unselected state has default button style*/
.select-button {}

/* Select button inner container for content */
/* Contents for select button are icon and text */
.select-button-content {
  display: flex;
  justify-content: center;
}

/* Select button has icon */
/* Use with material-icons class, check icon and a <span> element: */
.select-button-icon {
  font-size: 13px !important;
  height: 16px !important;
  padding-right: 5px;
}

/* Select button has text, the label of button */
.select-button-text {
  white-space: nowrap;
}

/* Select button has selected style when it is selected */
.select-button-selected {
  background-color: darkgrey;
  color: black
}

/* When the select button is unselected, the icon is hidden */
.select-button-container button:not(.select-button-selected) span.select-button-icon {
  display: none;
}

/* When the select button is unselected, the space for icon is saved */
/* This means that the selected and unselected select button have the same width */
.select-button-container button:not(.select-button-selected) span.select-button-text {
  display: flex;
  flex-grow: 1;
  padding-left: 9px;
  padding-right: 9px;
}
