@import "/common/stylesheets/colors.css";
@import "/common/stylesheets/fonts.css";

/* ---------------------------------------------------------------------------- */
/* Styles for generic GUI components                                            */
/* ---------------------------------------------------------------------------- */


/* ---------------------------------------------------------------------------- */
/* FLEXBOXES                                                                    */
/* ---------------------------------------------------------------------------- */

/* Filler div to take remaining space */
.Filler {
  flex-grow: 1;
}

.FlexBox {
  display: flex;
}

.HBox {
  display: flex;
  flex-direction: row;
}

.VBox {
  display: flex;
  flex-direction: column;
}



/* ---------------------------------------------------------------------------- */
/* VIEWPORT                                                                     */
/* ---------------------------------------------------------------------------- */

.viewport-full {
  height: 100vh;
  width: 100vw;
  overflow-x: hidden;
}



/* ---------------------------------------------------------------------------- */
/* BOX-SHADOW
/* ---------------------------------------------------------------------------- */

.BoxShadow {
  box-shadow: 0 2px 5px 0 rgb(0 0 0 / 16%), 0 2px 10px 0 rgb(0 0 0 / 12%);
}



/* ---------------------------------------------------------------------------- */
/* BUTTONS
/* ---------------------------------------------------------------------------- */
/* Basic buttons                                                                */
/* - button with text only                                                      */
/* - button with icon only                                                      */
/* - button with icon on before or after text                                   */
/* - button with icons on both side of text                                     */


/* ---------------------------------------------------------------------------- */
/* Default M size button */

button {
  display: flex;
  cursor: pointer;
  font-family: var(--font-family-button);
  font-size: var(--font-size-button-medium);
  font-weight: var(--font-weight-button);
  background-color: var(--color-melinda-lightblue);
  color: var(--color-primary-white);
  padding-left: 16px;
  padding-right: 16px;
  height: 48px;
  align-items: center;
  justify-content: center;
  border-color: var(--color-melinda-lightblue);
  border-radius: 6px;
  border-style: solid;
  border-width: 2px;
}

button.material-icons {
  display: flex;
  justify-content: center;
  align-items: center;
}

button.icon-on-left .material-icons {
  padding-right: 16px;
}

button.icon-on-right .material-icons {
  padding-left: 16px;
}

button.icon-on-right.icon-on-left {
  padding-left: 0px;
  padding-right: 0px;
}

button.icon-only {
  width: 48px;
}



/* ---------------------------------------------------------------------------- */
/* Small S size button                                                          */

button.small {
  font-size: var(--font-size-small);
  padding-left: 12px;
  padding-right: 12px;
  height: 32px;
}

button.small .material-icons {
  font-size: var(--font-size-icon-small);
}

button.small.icon-on-left .material-icons {
  padding-right: 12px;
}

button.small.icon-on-right .material-icons {
  padding-left: 12px;
}

button.small.icon-only {
  width: 32px;
}



/* ---------------------------------------------------------------------------- */
/* Alternate colored buttons for special use                                    */
/* - red for example clearing forms, green accepting etc.                       */

button.alternate-red,
button.alternate-green,
button.alternate-blue {
  background-color: var(--color-primary-white);
}

button.alternate-red {
  color: var(--color-red-100);
  border-color: var(--color-red-100);
}

button.alternate-green {
  color: var(--color-green-100);
  border-color: var(--color-green-100);
}

button.alternate-blue {
  color: var(--color-blue-100);
  border-color: var(--color-blue-100);
}



/* ---------------------------------------------------------------------------- */
/* Minimal buttons for closing modals, clearing form subfield etc.              */
button.minimal {
  color: var(--color-blue-100);
  border-color: transparent;
  background-color: transparent;
}

button.alternate-red.minimal {
  color: var(--color-red-100);
  border-color: transparent;
  background-color: transparent;
}

button.alternate-green.minimal {
  color: var(--color-green-100);
  border-color: transparent;
  background-color: transparent;
}

button.alternate-blue.minimal {
  color: var(--color-blue-100);
  border-color: transparent;
  background-color: transparent;
}



/* ---------------------------------------------------------------------------- */
/* Inverse colored button for dark backgrounds                                  */

button.inverse {
  color: var(--color-blue-100);
  background-color: var(--color-blue-40);
  border-color: var(--color-blue-40);
}

button.alternate-red.inverse,
button.alternate-green.inverse,
button.alternate-blue.inverse {
  background-color: var(--color-primary-white);
  border-color: transparent;
}

button.alternate-red.inverse {
  color: var(--color-red-100);
}

button.alternate-green.inverse {
  color: var(--color-green-100);
}

button.alternate-blue.inverse {
  color: var(--color-blue-100);
}

button.minimal.inverse {
  color: var(--color-primary-white);
}



/* ---------------------------------------------------------------------------- */
/* Button hover effects                                                         */

button:hover {
  color: var(--color-primary-white);
  background-color: var(--color-blue-100);
  border-color: var(--color-blue-100);
}

button.inverse:hover {
  border-color: var(--color-primary-white);
}


/* melinda specific alternate red hover style */
button.alternate-red:hover {
  color: var(--color-primary-white);
  background-color: var(--color-red-100);
  border-color: var(--color-red-100);
}

/* melinda specific alternate green hover style */
button.alternate-green:hover {
  color: var(--color-primary-white);
  background-color: var(--color-green-100);
  border-color: var(--color-green-100);
}

/* melinda specific alternate blue hover style */
button.alternate-blue:hover {
  color: var(--color-primary-white);
  background-color: var(--color-blue-100);
  border-color: var(--color-blue-100);
}


/* ---------------------------------------------------------------------------- */
/* Button active effects                                                        */

button:active {
  color: var(--color-primary-white);
  background-color: var(--color-blue-100);
  border-color: var(--color-blue-100);
  outline-color: var(--color-blue-100);
  outline-style: solid;
  outline-width: 2px;
  outline-offset: 2px;
}

button.inverse:active {
  outline-color: var(--color-primary-white);
}

/* melinda specific alternate red hover style */
button.alternate-red:active {
  outline-color: var(--color-red-100);
}

/* melinda specific alternate green hover style */
button.alternate-green:active {
  outline-color: var(--color-green-100);
}

/* melinda specific alternate blue hover style */
button.alternate-blue:active {
  outline-color: var(--color-blue-100);
}



/* ---------------------------------------------------------------------------- */
/* Button in disabled state                                                     */
/* Choose either "pointer-events:none" or "cursor: not-allowed"                 */
/* If latter: hover, focus and active state styles should be handled            */

button:disabled {
  pointer-events: none;
  color: var(--color-blue-60);
  background-color: var(--color-blue-20);
  border-color: var(--color-blue-20);
}

button.inverse:disabled {
  background-color: var(--color-blue-80);
  border-color: var(--color-blue-80);
}



/* ---------------------------------------------------------------------------- */
/* TOOLTIPS                                                                     */
/* ---------------------------------------------------------------------------- */
/* Styles for small bottom tooltips that appear on button hover                 */
/* Styles for larger info tooltips (clickable, with icons and more text) TODO   */

.tooltip {
  position: relative;
}

.tooltip:hover:before {
  pointer-events: none;
  content: attr(tooltip-text);
  position: absolute;
  z-index: 7;
  left: 50%;
  top: 120%;
  transform: translateX(-50%);
  padding-left: 12px;
  padding-right: 12px;
  padding-bottom: 6px;
  padding-top: 6px;
  border-radius: 0.2rem;
  background-color: var(--color-blue-100);
  color: var(--color-primary-white);
  font-size: var(--font-size-label-extra-small);
  font-family: var(--font-family-label);
  filter: drop-shadow(0px 5px 3px var(--color-grey-80));
}

.tooltip:hover:after {
  pointer-events: none;
  content: "";
  position: absolute;
  z-index: 7;
  left: 50%;
  top: 90%;
  border-style: solid;
  border-color: transparent;
  border-bottom-color: var(--color-blue-100);
  border-width: 7px;
  margin-left: -7px;
}

/* for small sized buttons */
button.small.tooltip:hover:before {
  left: 50%;
  top: 130%;
}


button.small.tooltip:hover:after {
  z-index: 7;
  left: 50%;
  top: 88%;
  border-width: 7px;
  margin-left: -7px;
}



/* ---------------------------------------------------------------------------- */
/* INPUTS AND LABELS FOR INPUTS                                                 */
/* ---------------------------------------------------------------------------- */

/* form-field-container is a wrapper for label and input */
.form-field-container {
  display: flex;
  gap: 12px;
  flex-direction: column;
  color: var(--color-blue-100);
  background-color: transparent;
  box-sizing: border-box;
  width: fit-content;
}

.form-field-container.full-width {
  width: 100%;
}

.form-field-container.half-width {
  width: 50%;
}

.form-field-container.quarter-width {
  width: 25%;
}



/* ---------------------------------------------------------------------------- */
/* Default M size label and input */

.label-wrapper {
  display: flex;
  flex-direction: row;
  color: var(--color-blue-100);
  font-family: var(--font-family-label);
  font-size: var(--font-size-label-medium);
  font-weight: var(--font-weight-label);
}

.input-wrapper {
  display: flex;
  flex-direction: row;
  font-family: var(--font-family-input);
  font-size: var(--font-size-input-medium);
  font-weight: var(--font-weight-input);
  background-color: var(--color-primary-white);
  height: 46px;
  border-style: solid;
  border-radius: 5px;
  border-color: var(--color-blue-100);
  border-width: 1px;
  padding-left: 16px;
  margin-left: 2px;
  margin-right: 2px;
  align-items: center;
}

.input-wrapper input {
  font-size: var(--font-size-input-medium);
  color: var(--color-blue-100);
  border: none;
  flex-grow: 1;
  padding-right: 12px;
}

.form-field-container .input-wrapper span {
  display: flex;
  justify-content: center;
  align-items: center;
  color: var(--color-blue-100);
  background-color: transparent;
  padding-right: 12px;
}

.form-field-container .input-wrapper>:not(button):last-child {
  padding-right: 16px;
}

.form-field-container .input-wrapper span.material-icons {
  font-size: var(--font-size-icon-medium);
}

.form-field-container .input-wrapper button {
  justify-content: center;
  align-items: center;
  height: 46px;
  border-radius: 4px;
}

.form-field-container .input-wrapper button.icon-only {
  color: var(--color-blue-100);
  background-color: transparent;
  border-color: transparent;
}

/* Placeholder text in input fields */
.input-wrapper input::placeholder {
  color: var(--color-blue-80);
  font-family: var(--font-family-placeholder);
}

/* Input text field can grow */
.inputs-wrapper input[type] {
  flex-grow: 1;
  flex-shrink: 1;
  flex-basis: auto;
}


/* ---------------------------------------------------------------------------- */
/* Small S size label and input */

.form-field-container.small {
  gap: 8px;
}

.form-field-container.small .label-wrapper {
  font-size: var(--font-size-label-small);
}

.form-field-container.small .input-wrapper {
  height: 32px;
  border-radius: 3px;
  padding-left: 12px;
}

.form-field-container.small .input-wrapper span.material-icons {
  font-size: var(--font-size-icon-small);
}

.form-field-container.small .input-wrapper>:not(button):last-child {
  padding-right: 12px;
}

.form-field-container.small input {
  font-size: var(--font-size-input-small);
  padding-right: 8px;
}

.form-field-container.small .input-wrapper button {
  font-size: var(--font-size-small);
  height: 32px;
  width: 32px;
  border-radius: 2px;
}


/* ---------------------------------------------------------------------------- */
/* Input wrapper has focus style */
/* when form field is focused */
.form-field-container:focus-within .input-wrapper {
  border-width: 1px;
  border-color: var(--color-functional-blue);
  border-style: solid;
  outline-width: 2px;
  outline-color: var(--color-functional-blue);
  outline-style: solid;
}

.input-wrapper input:focus-visible {
  outline: none;
}

.input-wrapper button:focus {
  outline: none;
}


/* ---------------------------------------------------------------------------- */
/* Input wrappers button has active style when clicked */

.input-wrapper button.icon-only:hover span.material-icons {
  cursor: pointer;
  color: var(--color-red-100);
}

.input-wrapper button.icon-only:active {
  outline: none;
  background-color: var(--color-red-100);
}

.input-wrapper button.icon-only:active span.material-icons {
  color: var(--color-primary-white);
}



/* ---------------------------------------------------------------------------- */
/* Input field disabled state */
/* form-field-container wrapper div should have attribute disabled="true" */
/* also the input element itself should be disabled */

.form-field-container:focus-within[disabled=true] .input-wrapper {
  outline: none;
  border-color: var(--color-blue-60);
}

.form-field-container[disabled=true] .input-wrapper {
  pointer-events: none;
  border-color: var(--color-blue-60);
  background-color: var(--color-grey-20);
}

.form-field-container[disabled=true] .input-wrapper input[type] {
  pointer-events: none;
  background-color: var(--color-grey-20);
}

.form-field-container[disabled=true] .input-wrapper span {
  color: var(--color-blue-80);
}

.form-field-container[disabled=true] .input-wrapper input::placeholder {
  color: var(--color-blue-60);
}

.form-field-container[disabled=true] .input-wrapper button {
  color: var(--color-grey-20);
  background-color: var(--color-blue-60);
  border-color: var(--color-blue-60);
}


/* ---------------------------------------------------------------------------- */
/* Input field success and error state */
/* success and error states should show correct icon at the end of input field
/* Error state can also have additional hint under input field */


.form-field-container.success .input-wrapper {
  border-width: 1px;
  border-color: var(--color-functional-green);
  border-style: solid;
  outline-width: 2px;
  outline-color: var(--color-functional-green);
  outline-style: solid;
}

.form-field-container.success .input-wrapper>span.material-icons:last-child {
  color: var(--color-functional-green);
}

.form-field-container.error .input-wrapper {
  border-width: 1px;
  border-color: var(--color-functional-red);
  border-style: solid;
  outline-width: 2px;
  outline-color: var(--color-functional-red);
  outline-style: solid;
}

.form-field-container.error .input-wrapper>span.material-icons:last-child {
  color: var(--color-functional-red);
}

.form-field-container.error .hint-wrapper {
  color: var(--color-functional-red);
  margin-left: 2px;
  margin-right: 2px;
}


/* ---------------------------------------------------------------------------- */
/* Inverse colors for labels and inputs */

.form-field-container.inverse .label-wrapper {
  color: var(--color-primary-white);
}

.form-field-container.inverse:focus-within .input-wrapper {
  border-color: var(--color-blue-60);
  outline-color: var(--color-blue-60);
}




/* ---------------------------------------------------------------------------- */
/* Tools-related common rules */
/* ---------------------------------------------------------------------------- */

.tools {
  display: flex;
  flex-direction: row;
  justify-content: center;
  align-items: center;
  width: 100vw;
  margin-top: 0.25em;
  margin-bottom: 0.25em;
}

.tools .highlight-border {
  border: 2px solid var(--color-melinda-green);
  border-radius: 1em;
  padding-left: 1.5em;
  padding-right: 1em;
  padding-top: 0.5em;
  padding-bottom: 0.5em;
  margin-left: 0.5em;
  margin-right: 0.5em;
}

.tools>.dropdown,
.tools>.dropdown>button {
  height: 40px;
  font-size: 32px;
}


/* ARTIKKELIT */
.Button input {
  font-size: var(--font-size-input-medium);
  font-weight: var(--font-weight-input);
  color: inherit;
  border: 1px solid var(--color-grey-80);
  background-color: transparent;
  padding: 4px 14px;
  cursor: pointer;
  border-radius: 1em;
}

/* ---------------------------------------------------------------------------- */
/* Inputs & their labels (old versions) */
/* ---------------------------------------------------------------------------- */

.Input {
  display: flex;
  width: 100%;
}

.Input>label {
  color: var(--color-blue-100);
  font-family: var(--font-family-label);
  font-size: var(--font-size-label-medium);
  font-weight: var(--font-weight-label);
  margin-right: 8px;
}

.Input>input {
  font-family: var(--font-family-input);
  border: 0;
  border-bottom: 1pt solid var(--color-grey-80);
  outline: none;
  font-size: var(--font-size-input-medium);
  font-weight: var(--font-weight-input);
  flex-grow: 1;
}

.Input>datalist>option {
  font-family: var(--font-family-content);
  font-size: var(--font-size-content-medium);
  font-weight: var(--font-weight-content);
}

.Input>input:valid {
  border-bottom: 1pt solid var(--color-functional-green);
}

.Input>input:invalid {
  border-bottom: 1pt solid var(--color-functional-red);
}

/* ---------------------------------------------------------------------------- */
/* Select & their labels */
/* ---------------------------------------------------------------------------- */

.Select>label {
  color: var(--color-blue-100);
  font-family: var(--font-family-label);
  font-size: var(--font-size-label-medium);
  font-weight: var(--font-weight-label);
  margin-right: 8px;
}

.Select>select {
  font-family: var(--font-family-content);
  border: 0;
  border-bottom: 1pt solid var(--color-grey-80);
  background: #fff;
  outline: none;
  font-size: var(--font-size-content-medium);
  font-weight: var(--font-weight-content);
}

.Select>select:focus {
  background: #ddd;
}

.Select>select>option {
  font-family: var(--font-family-content);
  font-size: var(--font-size-content-medium);
  font-weight: var(--font-weight-contentl);
}

/* ---------------------------------------------------------------------------- */
/* Dropdown menus */
/* ---------------------------------------------------------------------------- */

.dropdown {
  position: relative;
  display: inline-block;
}

.dropdown-content {
  display: none;
  position: absolute;
  right: 0;
  background-color: var(--color-primary-white);
  color: var(--color-primary-black);
  min-width: 160px;
  box-shadow: 0 2px 5px 0 rgb(0 0 0 / 16%), 0 2px 10px 0 rgb(0 0 0 / 12%);
}

/* Show the dropdown menu on hover */
.dropdown:hover .dropdown-content {
  display: block;
}

.dropdown-content .menu-header {
  padding: 8px 16px;
  white-space: nowrap;
  font-weight: bold;
  text-align: center;
}

.dropdown-content hr {
  border: 0px;
  border-top: 1px solid var(--color-grey-60);
}

.dropdown-content .menu-item {
  padding: 8px 16px;
  white-space: nowrap;
  color: #305d6d;
}

.dropdown-content .menu-item:hover {
  background-color: var(--color-grey-60);
}



/* ---------------------------------------------------------------------------- */
/* Modal dialogs
/* ---------------------------------------------------------------------------- */

.modal {
  display: none;
  /* Hidden by default */
  position: fixed;
  /* Stay in place */
  z-index: 3;
  /* Sit on top */
  left: 0;
  top: 0;
  width: 100%;
  /* Full width */
  height: 100%;
  /* Full height */
  overflow: auto;
  /* Enable scroll if needed */
  background-color: rgba(0, 0, 0, 0.2);
}

/* Modal Content */
.modal-content {
  background-color: #fefefe;
  margin: auto;
  padding: 16px 8px;
  min-width: 33%;
  max-width: 50%;
  min-height: 25%;
  border: 2px solid var(--color-grey-80);
  border-radius: 8px;
}

.modal-content hr {
  border: 0px;
  border-top: 1px solid var(--color-grey-60);
  margin: 8px 0px;
}

.modal-content .close {
  color: #aaaaaa;
  float: right;
  font-size: 28px;
  font-weight: bold;
}

.modal-content .close:hover,
.modal-content .close:focus {
  color: var(--color-primary-black);
  text-decoration: none;
  cursor: pointer;
}

/* ---------------------------------------------------------------------------- */
/* Dialog */
/* ---------------------------------------------------------------------------- */

/* Dialog elements have rounded corners and no borders */
dialog {
  border: none;
  border-radius: 1em;
}

/* Overriding the default "display: block" for dialogs */
dialog[open] {
  display: flex;
}

/* Dialog has backdrop that is displayed behind dialog modal */
/* Backdrop has transparency and darker color */
dialog::backdrop {
  background: rgba(50, 50, 50, 0.5);
}

/* The mouse cursor is set default (arrow) in dialog */
dialog:hover {
  cursor: default
}

/* Modal is the container for the dialog contents: */
/*   - icon */
/*   - headline */
/*   - supprting text */
/*   - action buttons */
dialog:modal {
  display: flex;
  flex-direction: column;
  color: var(--color-primary-black);
}

/* Dialog can have icon: informative picture on top */
/* Icon is centered */
.dialog-icon {
  display: flex !important;
  flex-direction: row;
  justify-content: center;
  padding: 20px;
  font-size: 32px !important;
}

/* Dialog has a headline: the purpose of dialog */
/* Headline is centered */
.dialog-headline {
  display: flex;
  flex-direction: row;
  justify-content: center;
  padding: 0.5em;
  font-size: var(--font-size-headline-small);
}

/* Dialog has supporting text: for example instructions */
/* Supporting text color is less prominent*/
.dialog-supporting-text {
  display: flex;
  flex-wrap: wrap;
  flex-direction: row;
  color: var(--color-grey-100);
  padding-left: 0.5em;
  padding-right: 0.5em;
  padding-top: 25px;
  padding-bottom: 25px;
  font-size: var(--font-size-content-medium);
}

/* If hr or p element is used in supporting text, */
/* sets the horizontal line on it's own row */
.dialog-supporting-text hr,
.dialog-supporting-text p:not(.full-width p) {
  flex: 0 0 100%
}

/* Dialog has place for actions */
/* Actions are positioned on the right */
.dialog-actions {
  display: flex;
  flex-direction: row;
  justify-content: flex-end;
  padding: 0.5em;
}

/* Dialog actions are buttons */
.dialog-actions button {
  margin-left: 3em;
  padding-top: 6px;
  padding-bottom: 6px;
  font-size: var(--font-size-button-large);
  font-weight: var(--font-weight-button);
}



/* ---------------------------------------------------------------------------- */
/* Segmented buttons */
/* ---------------------------------------------------------------------------- */
/* Segmented buttons can be single-select or multi-select buttons. */
/* Use segmented buttons for for example for filtering */

/* Segmented button container is the container for all the buttons that are displayed as one segmented button */
/* It is recommended not to add more than 5 buttons inside the container */
.segmented-button-container {
  display: inline-flex;
  justify-content: center;
  align-items: center;
  border-color: var(--color-primary-white);
}

/* Segmented button class is used with element <button> */
/* First and last button are rendered with round button edges */
.segmented-button:first-child {
  border-radius: 6px 0px 0px 6px;
  margin-right: 0px;
  border-right: none;
  border-color: var(--color-primary-white);
}

.segmented-button:nth-child(n):not(:first-child, :last-child) {
  margin-left: 0px;
  margin-right: 0px;
  border-radius: 0px 0px 0px 0px;
  border-right: none;
  border-color: var(--color-primary-white);
}

.segmented-button:last-child {
  border-radius: 0px 6px 6px 0px;
  border-color: var(--color-primary-white);
  margin-left: 0px;
}


/* ---------------------------------------------------------------------------- */
/* Select buttons */
/* ---------------------------------------------------------------------------- */
/* Select buttons have two "states", selected or unselected */
/* There is a style for a button that is selected and another for when it's not selected */

/* Select button is wrapped with a container div */
.select-button-container {
  display: inline-flex;
  align-items: center;
  justify-content: center;
}

/* Helper class for html readibility, used for marking a button as select button */
/* Select button in unselected state has unselected button style*/
.select-button {
  color: var(--color-primary-white);
  background-color: var(--color-grey-80);
  border-color: var(--color-primary-white);
}

/* Select button inner container for content */
/* Contents for select button are icon and text */
.select-button-content {
  display: flex;
  justify-content: center;
}

/* Select button has icon */
/* Use with material-icons class, check icon and a <span> element: */
.select-button-icon {
  font-size: var(--font-size-icon-small);
  padding-right: 5px;
}

/* Select button has text, the label of button */
.select-button-text {
  white-space: nowrap;
}

/* Select button has selected style when it is selected */
.select-button-selected {
  color: var(--color-primary-white);
  background-color: var(--color-functional-green);
  border-color: var(--color-functional-green);
}

/* When the select button is unselected, the icon is hidden */
.select-button-container button:not(.select-button-selected) span.select-button-icon {
  display: none;
}

/* When the select button is unselected, the space for icon is saved */
/* This means that the selected and unselected select button have the same width */
.select-button-container button:not(.select-button-selected) span.select-button-text {
  display: flex;
  flex-grow: 1;
  padding-left: 9px;
  padding-right: 9px;
}


/* ---------------------------------------------------------------------------- */
/* Login form styles */
/* ---------------------------------------------------------------------------- */

#login {
  margin: 50px auto;
  max-width: 400px;
  padding: 8px;
}

#login>* {
  padding: 8px 0;
  margin-bottom: 16px;
}

#login input {
  font-size: 16pt;
  padding-top: 4px;
  background-color: rgb(232, 240, 254);
  font-size: 2rem;
  border-bottom: 1px solid #4caf50;
  -webkit-box-shadow: 0 1px 0 0 #4caf50;
  box-shadow: 0 1px 0 0 #4caf50;
}